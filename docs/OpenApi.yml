openapi: 3.0.0
info:
  title: GoodEnough
  description: GoodEnough backend specification
  version: 0.0.3
servers:
  - url: http://localhost:3000
    description: Localhost 
  - url: https://develop.random.heroku.app
    description: Develop
  - url: https://random.heroku.app
    description: Production
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 
  schemas:
    error_missing_header:
      type: object
      properties:
        status:
          type: string
        message:
          type: string
          title: 'Missing authorization header'
    error_missing_required_properties:
      type: object
      properties:
        status:
          type: string
          enum: ['error']
        message:
          type: string
          enum: ['Missing required values']
        code:
          type: string
          enum: ['ERROR_MISSING_REQUIRED_VALUES']
    category:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    product:
      type: object
      properties:
        id:
          type: string 
          format: uuid
        barcode:
          type: string 
        barcode_type:
          type: string 
        type:
          type: string 
          enum:
            - custom 
            - barcode
        name:
          type: string
          format: 'date-time'
        category:
          type: object
          $ref: '#/components/schemas/category'
    item:
      type: object
      properties:
        id:
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
        expirationDate:
          type: string
          format: date
        createdAt:
          type: string
          format: date
        quantity:
          type: integer
        initialQuantity:
          type: integer
        cost:
          type: integer
        isUsed:
          type: boolean
    shopping_list_item:
      type: object
      properties:
        id: 
          type: string
          format: uuid
        productId:
          type: string
          format: uuid
        quantity:
          type: integer
        cost:
          type: integer
security:
  - bearerAuth: [] 
        
paths:
  /register:
    post:
      summary: Register a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email: 
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '201':
          description: Success creating the user entry
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    enum: ['success']
        '409':
          description: The email already exist
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    enum: ['error']
                  message:
                    type: string
                    enum: ['The email already exist']
                  code:
                    type: string
                    enum: ['ERROR_EMAIL_EXIST']  
        '422':
          description: 'Invalid or missing requirements'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_required_properties'
        '500':
          description: 'Server error'
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    enum: ['error']
                  message:
                    type: string
                    enum: ['Server error']
                  code:
                    type: string
                    enum: ['ERROR_SERVER']  
  /register/verify:
    post:
      summary: Verify user registration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: 
                  type: string
                  format: email
                verificationCode:
                  type: string
                  maxLength: 6
                  minLength: 6
      responses:
        '201':
          description: Create the user 
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    enum: ['success']
        '401':
          description: Invalid verification code
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    enum: ['error']
                  message:
                    type: string
                    enum: ['Invalid authentication code']
                  code:
                    type: string
                    enum: ['ERROR_INVALID_AUTH_CODE']  
        '422':
          description: 'Invalid or missing requirements'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_required_properties'
        '500':
          description: 'Server error'
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    enum: ['error']
                  message:
                    type: string
                    enum: ['Server error']
                  code:
                    type: string
                    enum: ['ERROR_SERVER']  
  /login:
    post:
      summary: Authenticate user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email: 
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Success authentication
          content:
            application/json:
              schema: 
                type: object
                properties:
                  authToken:
                    description: JWT token that needs to return
                    type: string
                  expiredAt:
                    description: Date time provide in ISO 8601
                    type: string
                    format: 'date-time'
                  status:
                    type: string
                    enum: ['success']
        '401':
          description: 'Invalid credentials'
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    enum: ['error']
                  message:
                    type: string
                    enum: ['Invalid credential']
                  code:
                    type: string
                    enum: ['ERROR_INVALID_CREDENTIALS']
        '422':
          description: 'Invalid or missing requirements'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_required_properties'
        '500':
          description: 'Server error'
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    enum: ['error']
                  message:
                    type: string
                    enum: ['Server error']
                  code:
                    type: string
                    enum: ['ERROR_SERVER'] 
  /me:
    get:
      security:
        - bearerAuth: []
      summary: Return the token holder information
      responses:
        '200': 
          description: Return token information decoded
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    enum: [success]
                  userId:
                    type: string
                    format: uuid
                  name:
                    type: string
                  email:
                    type: integer
                  expiredAt:
                    description: Date time when the token expired
                    type: string
                    format: 'date-time'
        '401':
          description: 'Missing authorization header'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error_missing_header'
        '500':
          description: 'Server error'
          content:
            application/json:
              schema: 
                type: object
                properties:
                  status:
                    type: string
                    enum: ['error']
                  message:
                    type: string
                    enum: ['Server error']
                  code:
                    type: string
                    enum: ['ERROR_SERVER'] 
                  